openapi: 3.0.0
servers:
  - url: http://api.saferize.com
info:
  description: >
    The Saferize API is organized around
    [REST](http://en.wikipedia.org/wiki/Representational_State_Transfer). Our
    API has predictable, resource-oriented URLs, and uses HTTP response codes to
    indicate API errors. We support [cross-origin resource
    sharing](https://en.wikipedia.org/wiki/Cross-origin_resource_sharing),
    allowing you to interact securely with our API from a client-side web
    application (though you should never expose your secret API key in any
    public website's client-side code). [JSON](http://www.json.org/) is returned
    by all API responses, including errors.


    To make the API as explorable as possible, accounts have test mode and live
    mode API keys. There is no "switch" for changing between modes, just use the
    appropriate key to perform a live or test transaction.


    Be sure to subscribe to Saferize's API announcements mailing list to receive
    information on new additions and changes.


    The requests in the right sidebar are designed to work as is.

    
    `NOTE` - We HIGHLY suggest using Saferize's [Developer Console Tool](https://console.saferize.com) as opposed to making raw calls.
  title: Saferize API
  version: v1
  termsOfService: 'https://saferize.com/terms-of-service/'
  contact:
    name: Saferize Customer Support
    email: devs@saferize.com
tags:
  - name: Developer
    description: >-
      The [Developer](#tocSdeveloper) object represents the publisher. You can create, retrieve
      and update a developer. You may also view all the apps associated with the
      developer.
  - name: App
    description: >-
      This is an object representing an [App](#tocSapp) that implements Saferize. You can
      retrieve it to see it's many properties and [configuration](#tocSappconfig).
  - name: Approval
    description: >-
      The [Approval](#tocSapproval) object is the intersection of parent-child-app relationship and as such the most important object on our platform. A child exists as a user on the approval which is managed by the parent. On the other side of this interaction is the app which complies with the conditions contained in the approval.


      An approval is created each time a child creates an account on the app.
      When this happens, the parent is given an opportunity to respond to the
      request by either approving or rejecting the app and validating the parent-child
      relationship. Moreover, parental changes on the approval object will reflect on how the child interacts with the app
  - name: Family
    description: >-
      Family methods provide access to information and operations relating to
      the Family. You can create, retrieve and update a family as well as list
      all it's members. You may also view all the validations of this family
      (such as Microtransaction, Email, SMS & Questionnaire)
  - name: Parent
    description: >-
      The parent object administrates approval objects and child objects. You
      can create, retrieve and update a parent. You may also invite other
      parents, join them to the family and have them co-administrate approvals.
  - name: Child
    description: >-
      The child object represents a child who can be on many different approvals
      (correlating to the number of the apps the user is registered on). You can
      create, retrieve and update a child. You may also view all the approvals
      associated with the child.
  - name: Session
    description: >-
      A session is established at the point of the authentication, and will last for an hour.
      To perform majority of the operations on our platform, whether it be reading or writing, you must be authenticated.


      Each subsuquent call will extend the session by an extra hour. If the communication is idle for an hour, the session will expire,
      and will need to be established again.
  - name: Events
    description: >
      Use webhooks to be notified about events that happen on the Saferize
      platform.
        * ApprovalCreatedEvent
        * ApprovalStatusChangedEvent
        * SessionTerminatedEvent
        * AppUserFeaturesChangedEvent
        * UsageTimerCreatedEvent
        * UsageTimerTimeIsUpEvent
        * UsageTimerPausedEvent
        * UsageTimerUnPausedEvent
security:
  - BearerAuth: []
          
paths:
  /developer:
    post:
      tags:
        - Developer
      summary: Create a Developer
      description: The `Developer` object is created when a new developer registers.
      operationId: createDeveloper
      responses:
        '201':
          description: The created developer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Developer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - firstName
                - lastName
                - email
                - mobilePhone
              properties:
                firstName:
                  type: string
                  description: Developer's first name.
                  example: Jane
                lastName:
                  type: string
                  description: Developer's last name.
                  example: Doe
                email:
                  description: Developer's primary email address.
                  type: string
                  example: jane.doe@example.com
                mobilePhone:
                  description: 
                    Developer's primary mobile phone number. The format should be XXXYYYZZZZ (no dashes or
                    parentheses).
                  type: string
                  example: 415-123-4567
                company:
                  description: Developer's company name.
                  type: string
                  example: Saferize
                country:
                  description: >-
                    The country in which the developer resides, or in which the company
                    is legally established. This should be an ISO 3166-1 alpha-2 country
                    code. For example, if you are in the United States and the business
                    for which you're creating an account is legally represented in
                    Canada, you would use `CA` as the country for the account being
                    created.
                  type: string
                  example: CA
        description: The new developer to be created
        required: true
  /developer/me:
    get:
      tags:
        - Developer
      summary: Retrieve the Developer
      description: Retrieves the developer object associated with the current session.
      operationId: getDeveloper
      responses:
        '200':
          description: The developer object
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Developer'
        '401':
          $ref: '#/components/responses/Unauthorized'
    put:
      tags:
        - Developer
      summary: Update the developer
      description: >-
        Updates the developer object associated with the current session. For
        security reasons, email cannot be updated through this endpoint.
      operationId: updateDeveloper
      responses:
        '200':
          description: The updated developer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Developer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - firstName
                - lastName
                - email
                - mobilePhone
              properties:
                firstName:
                  type: string
                  description: Developer's first name.
                  example: Jane
                lastName:
                  type: string
                  description: Developer's last name.
                  example: Doe
                mobilePhone:
                  description: >-
                    Developer's primary mobile phone number. The format should be XXXYYYZZZZ (no dashes or
                    parentheses).
                  type: string
                  example: 415-123-4567
                company:
                  description: Developer's company name.
                  type: string
                  example: Saferize
                country:
                  description: >-
                    The country in which the developer resides, or in which the company
                    is legally established. This should be an ISO 3166-1 alpha-2 country
                    code. For example, if you are in the United States and the business
                    for which you're creating an account is legally represented in
                    Canada, you would use `CA` as the country for the account being
                    created.
                  type: string
                  example: CA    
        description: The developer properties to be updated to.
        required: true
  /developer/me/apps:
    get:
      tags:
        - Developer
      summary: Retrieve Developer's apps
      description: Retrieves the apps associated with the developer.
      operationId: getApps
      responses:
        '200':
          description: An array of apps
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Apps'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /app:
    post:
      tags:
        - App
      operationId: createApp
      summary: Create an App
      description: >
        With a developer account you can create apps. 
      

        Although all `App` object properties must be filled out in order to [publish](#changestatus) it, we don't expect you to have it all figured out immediately. As a matter of fact, in order to create an `App` object, the only field you need to specify is the App's `name`.
      responses:
        '201':
          description: The created app.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
      requestBody:
        content:
          application/json:
              schema:
                type: object
                required:
                  - id
                  - name
                properties:
                  name:
                    type: string
                    description: The name of the app.
                    example: Saferize Example
                  platforms:
                    type: array
                    description: >-
                      An array of enums that specify what platforms are supported by this
                      app.
                    items:
                      type: string
                    enum:
                      - ANDROID
                      - IOS
                      - WINDOWS
                      - MAC_OS
                      - LINUX
                      - APPLE_TV
                      - ANDROID_TV
                      - APPLE_WATCH
                      - ANDROID_WATCH
                      - XBOX
                      - NINTENDO
                      - PLAYSTATION
                    example:
                      - ANDROID
                      - IOS
                  category:
                    description: One of the predifned values indicating the category of the app.
                    type: string
                    enum:
                      - GAME
                      - MEDIA
                    example: GAME
                  description:
                    type: string
                    description: A description of the app.
                    example: >-
                      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do
                      eiusmod tempor incididunt ut labore et dolore magna aliqua.
                  shortDescription:
                    type: string
                    description: A short description of the app.
                    example: >-
                      Lorem ipsum dolor sit amet.
                  urlName:
                    type: string
                    description: The partial url name of this app on Saferize.
                  age:
                    type: integer
                    format: int64
                    description: Minimum recommended age of app users.
                    example: 5
                  email:
                    type: string
                    description: The app developer's email.
                    example: developer@example.com
        description: The new app to be created.
        required: true
  '/app/{id}':
    get:
      tags:
        - App
      operationId: getApp
      security: []   # No security
      summary: Retrieve an App
      description: Retrieves the app object associated with the id.
      parameters:
        - name: id
          in: path
          description: The identifier of the app to retrieve.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Returns the app object associated with the id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - App
      operationId: changeAppAttributes
      summary: Change App's attributes
      description: >
        Changes the descriptive attributes of the app by setting the values of the parameters passed. Bear in mind that this endpoint does not alter the core configuration of the app.

        Any parameters not provided will be changed to `null`.

      responses:
        '200':
          description: The updated app.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      requestBody:
        content:
          application/json:
            schema:
                type: object
                required:
                  - id
                  - name
                properties:
                  name:
                    type: string
                    description: The name of the app.
                    example: Saferize Example Changed
                  platforms:
                    type: array
                    description: >-
                      An array of enums that specify what platforms are supported by this
                      app.
                    items:
                      type: string
                    enum:
                      - ANDROID
                      - IOS
                      - WINDOWS
                      - MAC_OS
                      - LINUX
                      - APPLE_TV
                      - ANDROID_TV
                      - APPLE_WATCH
                      - ANDROID_WATCH
                      - XBOX
                      - NINTENDO
                      - PLAYSTATION
                    example:
                      - MAC_OS
                      - IOS
                  category:
                    description: One of the predifned values indicating the category of the app.
                    type: string
                    enum:
                      - GAME
                      - MEDIA
                    example: MEDIA
                  description:
                    type: string
                    description: A description of the app.
                    example: >-
                      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do
                      eiusmod tempor incididunt ut labore et dolore magna aliqua.
                  shortDescription:
                    type: string
                    description: A short description of the app.
                    example: >-
                      Lorem ipsum dolor sit amet.
                  urlName:
                    type: string
                    description: The partial url name of this app on Saferize.
                  age:
                    type: integer
                    format: int64
                    description: Minimum recommended age of app users.
                    example: 4
                  email:
                    type: string
                    description: The app developer's email.
                    example: developer@example.com
        description: App fields to be updated.
        required: true
            
  '/app/{id}/key':
    post:
      tags:
        - App
      operationId: createKey
      summary: Create a Key to authenticate an App
      description: >-
        To be able to use your app, you must authenticate your app by using a public-key authentication scheme (we only allows RSA encryption). 
        Please take a look at [how to generate a private-public key set]().


        Your apps' keys carry many privileges, so be sure to keep your private key secret!
        Do not share your private keys in publicly accessible areas such GitHub,
        client-side code, and so forth.


        The returned access key is a piece of your login credential and will be used to generate a Json Web Token in order for your app to interact with our platform.
      parameters:
        - name: id
          in: path
          description: Unique identifier for the app.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: Returns the newly created access key if the public key was valid.
          content:
            application/json:
              schema:
                type: string
                example: 031e58c6-a92c-453d-920d-33ad279392de
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
      requestBody:
        $ref: '#/components/requestBodies/RSAPublicKey'
    put:
      tags:
        - App
      operationId: rollKey
      summary: Roll the Key that authenticates an App
      description: >-
        If you believe your key has been compromised, roll the key with a newly
        generated public key.


        Although your access key will remain the same, you will NOT be able to use your old public key any longer. For this reason, make sure you have your corresponding private key stored safely.
      parameters:
        - name: id
          in: path
          description: Unique identifier for the app.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Returns the access key if the public key was valid.
          content:
            application/json:
              schema:
                type: string
                example: 031e58c6-a92c-453d-920d-33ad279392de
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      requestBody:
        $ref: '#/components/requestBodies/RSAPublicKey'
  '/app/{id}[timeRestriction]*':
    patch:
      summary: Update App time restrictions
      tags:
        - App
      operationId: changeTimeRestriction
      description: >
        Time restrictions is a Saferize internal feature. If you would like
        parents to manage sessions, set time limits, and arbitrarily pause/resume
        the app, you can set the time restrictions flag value to `ENABLED`. This
        is also the default value set upon [app
        creation](/#createapp).


        Otherwise, you may disable this feature by setting the time restrictions
        flag value to `DISABLED`.
      parameters:
        - name: id
          in: path
          description: Unique identifier for the app.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Returns the app object with an updated field.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
            example:
              op: replace
              path: /timeRestriction
              value: ENABLED
        description: A JsonPatch operation `replace`.
        required: true
  '/app/{id}[status]*':
    patch:
      summary: Update app status
      tags:
        - App
      operationId: changeStatus
      description: >
        When the app is created, the initial status is `DRAFT`. Once the app is
        ready to be published, you may change the status to `IN_REVIEW` via this
        endpoint. This will initialize the process of publishing the app, and
        will remain `IN_REVIEW` until Saferize Customer Support approves
        it, upon which it will become `PUBLISHED`.


        Firstly, you must [Authenticate the app](/#createkey). In order to publish the app,
        all [App](/#tocSapp) fields must be populated. In addition to
        this, the app must have have at least one
        [Screenshot](/#uploadscreenshot) and one
        [Logo](/#uploadlogo) uploaded. 


        To delete the app, set the status to `DELETED`.


        You can learn more on how to go from creating an app to publishing one in our [Saferize Quick Start](http://google.com).


        If you need any help throughout this process, please contact the
        Saferize Customer Support.

      parameters:
        - name: id
          in: path
          description: Unique identifier for the app.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Returns the app object with an updated field.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
              example:
                op: replace
                path: /status
                value: PUBLISHED
        description: A JsonPatch operation `replace`.
        required: true
  '/app/{id}/config':
    put:
      tags:
        - App
      operationId: updateAppConfig
      summary: Update App configuration
      description: Updates the accompanying configuration object of the app. Take a look at the [AppConfig](/#tocSappconfig) for more details about the attributes of this object.
      parameters:
        - name: id
          in: path
          description: Unique identifier for the app.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: >-
            Returns the app configuration object if the update succeeded. This
            call will throw an error if update parameters are invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppConfig'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppConfig'
        description: The new app configuration.
        required: true
    get:
      tags:
        - App
      operationId: getAppConfig
      summary: Retrieve App configuration
      parameters:
        - name: id
          in: path
          description: Unique identifier for the app.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Returns the app configuration object if it exists on the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppConfig'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  '/app/{id}/logo':
    post:
      tags:
        - App
      operationId: uploadLogo
      summary: Upload App logo
      parameters:
        - name: id
          in: path
          description: Unique identifier for the app.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: Returns the image object if the upload succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUpload'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
      requestBody:
        $ref: '#/components/requestBodies/RFC2388'
    get:
      tags:
        - App
      operationId: getLogos
      security: []   # No security
      summary: Retrieve App logo
      parameters:
        - name: id
          in: path
          description: Unique identifier for the app.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Returns an array of image objects if they exist on the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUpload'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  '/app/{id}/logo/{logoId}':
    delete:
      tags:
        - App
      operationId: deleteLogo
      summary: Delete App logo
      parameters:
        - name: id
          in: path
          description: Unique identifier for the app.
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: logoId
          description: Unique identifier for the image file to be deleted.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Returns `No Content` if the deletion was succeeded.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  '/app/{id}/screenshots':
    post:
      tags:
        - App
      operationId: uploadScreenshot
      summary: Upload App screenshot
      parameters:
        - name: id
          in: path
          description: Unique identifier for the app.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Returns the image object if the upload succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUpload'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
      requestBody:
        $ref: '#/components/requestBodies/RFC2388'
    get:
      tags:
        - App
      operationId: getScreenshots
      security: []   # No security
      summary: Retrieve App screenshots
      parameters:
        - name: id
          in: path
          description: Unique identifier for the app.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Returns an array of image objects if they exist on the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUpload'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  '/app/{id}/screenshots/{screenshotId}':
    delete:
      tags:
        - App
      operationId: deleteScreenshot
      summary: Delete App screenshot
      parameters:
        - name: id
          in: path
          description: Unique identifier for the app.
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: screenshotId
          description: Unique identifier for the image file to be deleted.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Returns `No Content` if the deletion was succeeded.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  '/app/{id}/plan':
    get:
      tags:
        - App
      operationId: getAppPlan
      security: []   # No security
      description: >
        Retrieves the subscription plan associated with the app. Take a look at the [SubscriptionPlan](/#tocSsubscriptionplan) for more details about the attributes of this object.


        As you have probably noticed, we haven't exposed an endpoint for creating a subscription plan. The reason for this is we have a separate process for creating the subscription plan. Please contact our [Support](mailto:devs@saferize.com) and we will help you get started.
      summary: Retrieve App plan
      parameters:
        - name: id
          in: path
          description: Unique identifier for the app.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Returns a subscription plan object if it exists on the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPlan'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  '/app/{id}/implementedFeatures':
    put:
      tags:
        - App
      operationId: setImplementedAppFeatures
      summary: Set implemented app features
      description: >-
        The publicly visible list of implemented features is important for
        parents to know what features their kids will be interacting with. From this list you can specify which ones the parents can
        customize when you [set parental
        features](/#setparentalappfeatures).

        
        WHen setting [AppFeatures](/#tocSappfeature) please make sure you set implemented features (by calling this endpoint), before setting the [parental features](/#setparentalappfeatures).
      parameters:
        - name: id
          in: path
          description: Unique identifier for the app.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Returns an array of app feature objects.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppFeatures'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      requestBody:
        $ref: '#/components/requestBodies/AppFeatureNameArray'
  '/app/{id}/parentalFeatures':
    put:
      tags:
        - App
      operationId: setParentalAppFeatures
      summary: Set parental features
      description: >-
        Parental features allow parents to customize their child's experience with these
        features. It's up to the developer's discretion to determine which features
        they wish to expose. 
        
        
        Please [set implemented
        features](/#setimplementedappfeatures) before setting
        parental features.
      parameters:
        - name: id
          in: path
          description: Unique identifier for the app.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: >-
            Returns an array of app feature objects. Bare in mind that the
            `parental` flag will be set to `false` initially.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppFeatures'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      requestBody:
        $ref: '#/components/requestBodies/AppFeatureNameArray'
  '/app/{id}/features':
    get:
      tags:
        - App
      operationId: getAppFeatures
      summary: Retrieve App features
      parameters:
        - name: id
          in: path
          description: Unique identifier for the app.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Returns an array of app feature objects if they exist on the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppFeatures'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'        
  /approval:
    post:
      tags:
        - Approval
      summary: Initiate an Approval
      description: >-
        A new approval object is created in order to get parent consent to add a new app user (a child).


        Your app will be able to initiate approvals once it is pu lished. To learn more about setting up your app, please read our [Quick Start Guide](http://google.com).
      operationId: initiateApproval
      responses:
        '201':
          description: Approval Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Approval'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'                
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - appUser
                - family
                - statusTime
                - createdTime
                - status
              properties:
                appUser:
                  $ref: '#/components/schemas/AppUser'
                approvalParent:
                  $ref: '#/components/schemas/Parent'
                family:
                  $ref: '#/components/schemas/Family'
                statusTime:
                  type: string
                  format: date-time
                  description: The time and date of the last status change. The date-time notation as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
                  example: '2017-11-09T14:23:00.000Z'
                createdTime:
                  type: string
                  format: date-time
                  description: The time and date when this approval was created. The date-time notation as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
                  example: '2017-11-09T14:23:00.000Z'
                status:
                  description: The approval status
                  type: string
                  enum:
                    - PENDING
                    - NOTIFIED
                    - APPROVED
                    - REJECTED
                  example: APPROVED
                parentEmail:
                  type: string
                  description: The email of the parent who received this request
                  example: parent@myfamily.com
                parentMobilePhone:
                  type: string
                  description: >-
                    The phone number of the parent who received this request. The format should be XXXYYYZZZZ (no dashes or
                    parentheses).
                  example: 4151234567
                currentState:
                  description: The approval status
                  type: string
                  enum:
                    - ACTIVE
                    - PAUSED
                  example: ACTIVE  
        description: The new Approval
        required: true
    get:
      tags:
        - Approval
      operationId: getApprovals
      summary: List App approvals
      description: Retrieves all the approvals associated with the app.
      responses:
        '200':
          description: Returns an array of approvals associated with the app.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Approvals'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'                  
  '/approval/{id}':
    get:
      tags:
        - Approval
      operationId: getApprovalById
      summary: Retrieve an Approval via identifier
      parameters:
        - name: id
          in: path
          description: Unique identifier for the approval.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Returns the approval object associated with the id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Approval'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'                
  '/approval/token/{token}':
    get:
      tags:
        - Approval
      operationId: getApprovalByToken
      summary: Retrieve an Approval via token
      parameters:
        - name: token
          in: path
          description: The unique token assigned by the app to the user.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Returns the approval object associated with the token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Approval'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  '/session':
    post:
      tags:
        - Session
      operationId: createSession
      summary: Create a developer session
      responses:
        '201':
          description: Returns the session object if the creation succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
      requestBody:
        content:
          application/json:
            schema:              
              type: object
              required:
                - accessKey
                - secretKey
              properties:
                accessKey:
                  type: string
                  description: Access key of the developer that is attempting to create the session.
                  example: 'jane.developer@saferize.com'
                secretKey:
                  type: string
                  description: Secret key of the developer that is attempting to create the session.
                  example: 'SuperHardPassword!1'                  
        description: Credentials of the subject that is attempting to create the session.
        required: true
  '/session/app/{token}':
    post:
      tags:
        - Session
      operationId: createAppUserSession
      summary: Create an app user session
      parameters:
        - name: token
          in: path
          description: Unique username (alias) for the app user on the app.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns the app usage session object if the creation succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUsageSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'     
components:
  responses:
    BadRequest:
      description: >-
        The request was unacceptable, likely due to missing a required
        parameter.
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: No valid `Authentication` header provided.
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The specified resource was not found.
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
    Conflict:
      description: The request conflicts with another request
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
  requestBodies:
    AppFeatureNameArray:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AppFeatureName'
            example:
              - CHAT
              - ADVERTISING
      description: An array of app feature names.
    RSAPublicKey:
      content:
        application/json:
          schema:
            type: string
            example: >-
              -----BEGIN PUBLIC KEY-----
              MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApofmdG+zACt1kHNlQciwyg3DuRW5za33FuBH+Zb8JoixthvtZNgee6+TkbCEWGmC9+cIJLTnialKdDUxlr5JpCtJnIpaiD++Ic5AINpE0zqhD4obR8eN7m5lcKGuNwShFxB/lc+IFHeEf5MkPcU+nSkJIV74F0XJIqNeewGxNayJ/bbIuOS4gMI0/lU18ua3OsLvVmJZyXObiYq3nMfSwWKuhfLqRMSSfICEDjnVAq3+F8/lxoqAxbC0gFZC3CdOjINgMJYr3XY6fo9oAkrt4yjSO9kAqQxaHiLqJ87gjjQEKaBzlejTM3/iJBamQUCF3VPZ3y7AoSCEWBEA5xhvXQIDAQAB
              -----END PUBLIC KEY-----
      description: RSA public key.
      required: true
    RFC2388:
      content:
        multipart/form-data:
          schema:
            type: object
      description: >-
        A file to upload. The file should follow the specifications of [RFC 2388](https://tools.ietf.org/html/rfc2388)
        (which defines file transfers for the `multipart/form-data protocol`).
      required: true
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    App:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the app returned by the system.
          example: 1
        name:
          type: string
          description: Name of the app.
          example: Saferize Example
        platforms:
          type: array
          description: >-
            Array of enums that specify what platforms are supported by this
            app.
          items:
            type: string
          enum:
            - ANDROID
            - IOS
            - WINDOWS
            - MAC_OS
            - LINUX
            - APPLE_TV
            - ANDROID_TV
            - APPLE_WATCH
            - ANDROID_WATCH
            - XBOX
            - NINTENDO
            - PLAYSTATION
          example:
            - ANDROID
            - IOS
        category:
          description: One of the predefined values indicating the category of the app.
          type: string
          enum:
            - GAME
            - MEDIA
          example: GAME
        timeRestriction:
          type: string
          description: On/off flag for enabling/disabling time restrictions on the app.
          enum:
            - ENABLED
            - DISABLED
          example: ENABLED
        status:
          type: string
          description: >-
            Current lifecycle status of the app. Please read more on the
            requirements for [publishing the app](#changestatus).
          enum:
            - DRAFT
            - PUBLISHED
            - DELETED
          example: PUBLISHED
        description:
          type: string
          description: Description of the app. (max. number of characters = 255)
          example: >-
            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do
            eiusmod tempor incididunt ut labore et dolore magna aliqua.
        shortDescription:
          type: string
          description: Short description of the app. (max. number of characters = 100)
          example: >-
            Lorem ipsum dolor sit amet.
        urlName:
          type: string
          description: Partial url name of this app on Saferize.
        age:
          type: integer
          format: int64
          description: Minimum recommended age of app users.
          example: 5
        email:
          type: string
          description: App developer's email.
          example: developer@example.com


          
    Apps:  
      type: array
      items:
        $ref: "#/components/schemas/App"      
    Family:
      
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the family returned by the system.
          example: 12345
        name:
          type: string
          description: Family name.
          example: Smith        
    Parent:
      type: object
      required:
        - firstName
        - lastName
        - email
        - family
        - id
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the parent returned by the system.
          example: 123456
        firstName:
          type: string
          description: Parent's first name.
          example: John
        lastName:
          type: string
          description: Parent's last name
          example: Smith
        mobilePhone:
          type: string
          format: phone
          description: >-
            Parent's phone number. The format should be XXXYYYZZZZ (no dashes or
            parentheses).
          example: 41512345678
        family:
          $ref: '#/components/schemas/Family'
        email:
          description: Parent's email address.
          type: string
          format: email
          example: parent@example.com
    Child:
      type: object
      required:
        - id
        - firstName
        - family
        - gender
        - birthDate
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the child returned by the system.
          example: 1234567
        firstName:
          type: string
          description: Child's first name.
          example: Sofia
        lastName:
          type: string
          description: Child's last name.
          example: Smith
        birthDate:
          description: Child's date of birth.
          type: string
          format: date
          example: '2009-01-23T00:00:00.000Z'
        family:
          description: Family.
          $ref: '#/components/schemas/Family'
        gender:
          description: Child's gender.
          type: string
          enum:
            - MALE
            - FEMALE
            - UNKNOWN
          example: FEMALE
    Developer:
      type: object
      required:
        - id
        - firstName
        - lastName
        - email
        - mobilePhone
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the developer returned by the system.
          example: 1234
        firstName:
          type: string
          description: Developer's first name.
          example: Jane
        lastName:
          type: string
          description: Developer's last name.
          example: Doe
        email:
          description: Developer's primary email address.
          type: string
          example: jane.doe@example.com
        mobilePhone:
          description: >-
            Developer's primary mobile phone number. The format should be XXXYYYZZZZ (no dashes or
            parentheses).
          type: string
          example: 415-123-4567
        company:
          description: Developer's company name.
          type: string
          example: Saferize
        country:
          description: >-
            The country in which the developer resides, or in which the company
            is legally established. This should be an ISO 3166-1 alpha-2 country
            code. For example, if you are in the United States and the business
            for which you're creating an account is legally represented in
            Canada, you would use `CA` as the country for the account being
            created.
          type: string
          example: CA
    AppUser:
      type: object
      required:
        - id
        - token
        - app
        - child
        - family
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the app user returned by the system.
          example: 123
        token:
          type: string
          description: >-
            App user's token (username on the app). This is defined by the app and should be
            user-unique.
          example: child_nickname_on_game_1
        app:
          $ref: '#/components/schemas/App'
        child:
          $ref: '#/components/schemas/Child'
        family:
          $ref: '#/components/schemas/Family'
    Approval:
      type: object
      required:
        - id
        - appUser
        - family
        - statusTime
        - createdTime
        - status
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the approval returned by the system.
          example: 12
        appUser:
          $ref: '#/components/schemas/AppUser'
        approvalParent:
          $ref: '#/components/schemas/Parent'
        family:
          $ref: '#/components/schemas/Family'
        statusTime:
          type: string
          format: date-time
          description: Time and date of the last status change. The date-time notation as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
          example: '2017-11-09T14:23:00.000Z'
        createdTime:
          type: string
          format: date-time
          description: Time and date when this approval was created. The date-time notation as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
          example: '2017-11-09T14:23:00.000Z'
        status:
          description: The approval status.
          type: string
          enum:
            - PENDING
            - NOTIFIED
            - APPROVED
            - REJECTED
          example: APPROVED
        parentEmail:
          type: string
          description: Email of the parent who received this request.
          example: parent@myfamily.com
        parentMobilePhone:
          type: string
          description: Phone number of the parent who received this request. The format should be XXXYYYZZZZ (no dashes or
            parentheses).
          example: 4151234567
        currentState:
          description: Current state of the approval.
          type: string
          enum:
            - ACTIVE
            - PAUSED
          example: ACTIVE          
    Approvals:
      type: array
      items:
        $ref: "#/components/schemas/Approval"    
    AppConfig:
      type: object
      properties:
        webhookUrl:
          type: string
          description: Valid HTTPS endpoint for receiving webhooks.
          example: 'https://example.saferize.com'
        autoPauseSessionsInterval:
          type: integer
          format: int64
          description: Undefined.
          example: 30
        autoRejectWaitTime:
          type: integer
          format: int64
          description: >-
            Time in seconds after which an unattended approval will be
            automatically rejected.
          example: 259200
        validatorName:
          $ref: '#/components/schemas/Validator'
    Session:
      type: object
      required:
        - duration
        - subject
        - signatureCode
        - startedAt
        - state
        - uuid
        - token
      properties:
        duration:
          type: integer
          format: int64
          description: Duration of the session before it expires and is no longer valid.
          example: 3600
        subject:
          description: Developer subject to whom the session belongs to.
          $ref: '#/components/schemas/Developer'
          
        origin:
          type: string
          description: Origin of the requester that created the session.
          example: '127.0.0.1'
        signatureCode: 
          type: string
          description: Unique session signature.
          example: '8479dd81-4a33-4806-902f-52cbbe93c240'
        startedAt:
          type: string
          format: date-time
          example: '2017-07-21T17:32:28Z'
          description: Timestamp when the session was started. The date-time notation as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339)
        state:
          description: The current state of the approval.
          type: string
          enum:
            - ACTIVE,
            - PAUSED
          example: ACTIVE
        uuid:
          description: Unique [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) of the session.
          type: string
          example: 'ce11cccc-1bdb-430f-8b9f-ee02079e4fe5'
        token:
          description: Unique token of the session.
          type: string
          example: 'VjF8MTA5ODh8Y29tLnNhZmVyaXplLmNvcmUuZW50aXRpZXMucGFyZW50LlBhcmVudHwxNTI1MjkyNjU2MTA4fGNlMTFjY2NjLTFiZGItNDMwZi04YjlmLWVlMDIwNzllNGZlNQ=='
    AppUsageSession:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the app usage session returned by the system.
          example: 12345678
        approval:
          $ref: "#/components/schemas/Approval"                    
        hostname:
          type: string
          description: IP address where the request to create an app usage session originated from.
          example: 183.241.21.10
    AppFeature:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the app feature returned by the system.
          example: 12345678
        appId:
          type: integer
          format: int64
          description: >-
            Unique identifier for the app that this app feature is associated
            with.
          example: 12
        name:
          $ref: "#/components/schemas/AppFeatureName"    
        implemented:
          type: boolean
          example: true
          description: Boolean flag indicating whether the feature is implemented.
        parentPrivilege:
          type: boolean
          example: true
          description: >-
            Boolean flag indicating whether the parents are allowed to turn
            on/off the feature.
    AppFeatures:
      type: array
      items:
        $ref: "#/components/schemas/AppFeature"    
    SubscriptionPlan:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the subscription plan returned by the system.
          example: 123456
        name:
          type: string
          description: The plans name, displayable to the customer.
          example: Platinum starter
        billingCycle:
          description: Specifies billing frequency.
          type: string
          enum:
            - WEEKLY
            - MONTHLY
            - YEARLY
          example: YEARLY
        active:
          type: boolean
          description: Boolean flag representing whether the plan is active.
          example: true
        price:
          type: number
          format: float
          description: >-
            The cost of the item as a positive float.
          example: 2.99
    ImageUpload:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the image returned by the system.
          example: 123456789
        url:
          type: string
          description: A read-only URL where the uploaded file can be accessed.
          example: 'https://s3.us-west-1.amazonaws.com/path/to/a/file.jpg"'
        createdTime:
          type: string
          description: >-
            Time at which the object was created. Measured in seconds since the
            Unix epoch.
          example: 1522346229038
        width:
          type: integer
          format: int64
          description: The width in pixels of the image object.
          example: 200
        height:
          type: integer
          format: int64
          description: The height in pixels of the image object.
          example: 200
      ImageUploads:
        type: array
        items:
          $ref: "#/components/schemas/ImageUpload"    
    Validator:
      description: Validator defines a specific way that the developer has chosen for the app to confirm parent-child relationship.
      type: string
      enum:
        - Microtransaction
        - SMS
      example: Microtransaction
    AppFeatureName:
      description: App feature name.
      type: string
      enum:
        - ADVERTISING
        - CHAT
        - COMMENTS
        - DATA_COLLECTION
        - IN_APP_PURCHASES
        - LOCATION_SHARING
        - PAID_APP
        - PUSH_NOTIFICATIONS
        - SOCIAL_INTERACTION
        - SUBSCRIPTION
      example: DATA_COLLECTION
    JsonPatch:
      type: object
      properties:
        op:
          type: string
          enum:
            - add
            - replace
            - remove
          description: Predifined JsonPatch operation.
          example: replace
        path:
          type: string
          description: The path to be updated using JsonPatch syntax.
          example: /status
        value:
          type: string
          description: New resource value.
          example: PUBLISHED
    Error:
      description: >
        Saferize uses conventional HTTP response codes to indicate the success
        or failure of an API request. In general: Codes in the `2xx` range
        indicate success. Codes in the `4xx` range indicate an error that failed
        given the information provided (e.g., a required parameter was omitted,
        a charge failed, etc.). Codes in the `5xx` range indicate an error with
        Saferize's servers (these are rare).
      properties:
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: There is already an app with those attributes.
        type:
          type: string
          description: Error type.
          example: DuplicateEntityException
      required:
        - type
      type: object